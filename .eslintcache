[{"/home/josiah-eakle/Dev/React-Apps/for-all-tn-admin/src/index.js":"1","/home/josiah-eakle/Dev/React-Apps/for-all-tn-admin/src/components/App.js":"2","/home/josiah-eakle/Dev/React-Apps/for-all-tn-admin/src/components/IssueHub.js":"3","/home/josiah-eakle/Dev/React-Apps/for-all-tn-admin/src/components/Candidate.js":"4","/home/josiah-eakle/Dev/React-Apps/for-all-tn-admin/src/components/CandidateHub.js":"5","/home/josiah-eakle/Dev/React-Apps/for-all-tn-admin/src/components/Issue.js":"6","/home/josiah-eakle/Dev/React-Apps/for-all-tn-admin/src/components/CandidateIssue.js":"7","/home/josiah-eakle/Dev/React-Apps/for-all-tn-admin/src/components/LoginPage.js":"8","/home/josiah-eakle/Dev/React-Apps/for-all-tn-admin/src/modules/UserHandler.js":"9","/home/josiah-eakle/Dev/React-Apps/for-all-tn-admin/src/components/OpinionOption.js":"10","/home/josiah-eakle/Dev/React-Apps/for-all-tn-admin/src/components/UserHub.js":"11"},{"size":239,"mtime":1609094322313,"results":"12","hashOfConfig":"13"},{"size":3223,"mtime":1609778806596,"results":"14","hashOfConfig":"13"},{"size":4615,"mtime":1609713394234,"results":"15","hashOfConfig":"13"},{"size":2335,"mtime":1609712704153,"results":"16","hashOfConfig":"13"},{"size":4351,"mtime":1609435997901,"results":"17","hashOfConfig":"13"},{"size":1045,"mtime":1609714017027,"results":"18","hashOfConfig":"13"},{"size":2574,"mtime":1609779560546,"results":"19","hashOfConfig":"13"},{"size":6147,"mtime":1609476044277,"results":"20","hashOfConfig":"13"},{"size":1045,"mtime":1609778676358,"results":"21","hashOfConfig":"13"},{"size":2237,"mtime":1609712941977,"results":"22","hashOfConfig":"13"},{"size":558,"mtime":1609778989475,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1b16adc",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/josiah-eakle/Dev/React-Apps/for-all-tn-admin/src/index.js",[],["52","53"],"/home/josiah-eakle/Dev/React-Apps/for-all-tn-admin/src/components/App.js",[],"/home/josiah-eakle/Dev/React-Apps/for-all-tn-admin/src/components/IssueHub.js",["54","55","56","57"],"\nimport {useEffect, useState} from \"react\"\nimport axios from \"axios\"\nimport Issue from \"./Issue.js\"\n\nconst IssueHub = (props) => {\n\n    const [issues, setIssues] = useState([])\n    const [editing, setEditing] = useState(false)\n    const [editingIssueId, setEditingIssueId] = useState(false)\n    const [issueTitle, setIssueTitle] = useState()\n    const [issueDescr, setIssueDescr] = useState()\n\n    const editIssue = (issueId) => {\n\n        setEditing(true)\n        setEditingIssueId(issueId)\n\n        \n    }\n\n    const openNewIssue = () => {\n        setEditing(true)\n        setEditingIssueId(false)\n    }\n\n    const onEditing = () => {\n        const issueTitleInput = document.getElementById('issue-title-input')\n        const issueDescrInput = document.getElementById('issue-descr-input')\n\n        let title\n        let descr\n\n        issues.forEach(i => {\n            if(`${i._id}` === `${editingIssueId}`) {\n                title = i.title\n                descr = i.description\n            }\n        })\n\n        setIssueDescr(descr)\n        setIssueTitle(title)\n\n        issueTitleInput.value = title || ''\n        issueDescrInput.value = descr || ''\n\n    }\n\n    const cancelEdit = () => {\n        setEditing(false)\n        setEditingIssueId(false)\n    }\n \n    const deleteIssue = async (issueId) => {\n        \n\n        const options = {\n            url: 'http://localhost:4000/delete/issue',\n            method: \"POST\",\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Accept\": \"application/json\"\n            },\n            data: {\n                issue: issueId\n            }\n        }\n\n        const res = await axios(options)\n\n        // console.log(`delete responce`)\n        // console.log(res)\n        setTimeout(() => {\n            importAllIssues()\n        }, 100)\n\n    }\n\n    const importAllIssues = async () => {\n        const options = {\n            url: 'http://localhost:4000/get/issues',\n            method: \"GET\"\n        }\n\n        const res = await axios(options)\n\n        // console.log(`getting issues`)\n        // console.log(res)\n\n        setIssues(res.data)\n\n    }\n\n    const createNewIssue = async (e) => {\n\n        e.preventDefault()\n\n        document.getElementById('new-issue-form').reset();\n\n\n        const options = {\n            url: 'http://localhost:4000/update/issue',\n            method: \"POST\",\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Accept\": \"application/json\"\n            },\n            data: {\n                title: issueTitle,\n                description: issueDescr,\n                issueID: editingIssueId\n            }\n        }\n\n        setEditing(false)\n        setEditingIssueId(false)\n\n\n        const res = await axios(options)\n        importAllIssues()\n        // console.log(res)\n    \n    }\n\n    const updateValue = (e) => {\n        switch(e.target.id) {\n            case('issue-title-input'):  \n                setIssueTitle(e.target.value)\n                break;\n            case('issue-descr-input'):\n                setIssueDescr(e.target.value)\n                break;\n        }\n    }\n\n    useEffect(() => {\n        if(editing === true) {\n            onEditing()\n        }\n    }, [editing])\n\n    useEffect(() => {\n        importAllIssues()\n    }, [])\n\n    return (\n        <div className='IssueHub'>\n\n            {(editing===true)?\n                <form id='new-issue-form' onSubmit={createNewIssue} >\n                    <h2> {(editing === false)? 'New' : 'Editing'} Issue</h2>\n                    <label htmlFor='issue-title-input'>Title</label>\n                    <input id='issue-title-input' onChange={updateValue}></input>\n                    <label htmlFor='issue-descr-input'>Description</label>\n                    <input id='issue-descr-input' onChange={updateValue}></input>\n                    <button type='button' onClick={cancelEdit} id='cancel-issue-button'> Cancel </button>\n                    <button type='submit' id='issue-submit-button' >Submit</button>\n                </form>\n            :\n                <div id='all-issues'> \n                    <h2>All Issues</h2>\n                    <button onClick={openNewIssue} id='new-issue-button'> New Issue </button>\n                    {issues.map((issue, i) => {\n                        return (\n                            <Issue issue={issue} key={i} onEdit={editIssue} onDelete={deleteIssue} />\n                        );\n                    })}\n                </div>\n            }\n\n\n\n        </div>\n    );\n\n}\n\nexport default IssueHub","/home/josiah-eakle/Dev/React-Apps/for-all-tn-admin/src/components/Candidate.js",["58","59","60","61"],"\n// import repIcon from \"https://foralltn.org/wp-content/uploads/2020/12/rep-icon.png\"\n// import demIcon from \"https://foralltn.org/wp-content/uploads/2020/12/dem-icon.png\"\n\nimport {useState, useEffect} from 'react'\nimport CandidateIssue from './CandidateIssue'\n\nconst Candidate = (props) => {\n\n    // props - c(andidate)\n\n    const [ editing, setEditing ] = useState(false)\n\n    const editCandidate = (e) => {\n        setEditing(true)\n    }\n\n/*\n    if(c.party === \"Republican\")\n        cParty.src = 'https://foralltn.org/wp-content/uploads/2020/12/rep-icon.png'\n    else if(c.party === \"Democratic\") \n        cParty.src = 'https://foralltn.org/wp-content/uploads/2020/12/dem-icon.png'\n\n*/\n\n    return (\n        <div className='Candidate'>\n            <div id={`${props.c._id}`} className=\"candidate-container\">\n\n                <div className='candidate-information-container'>\n                    <div className=\"candidate-sub-container\">\n                        <img src={`https://for-all-tn-api.herokuapp.com/proxy-img?url=${props.c.img}`} className=\"candidate-image\" />\n                    </div>\n                    <div className=\"candidate-info\">\n                        <span className='candidate-name candidate-span'>{`${props.c.first_name} ${props.c.last_name}`}</span>\n                        <span className=\"candidate-district candidate-span\">District: {`${props.c.district}`} </span>\n                    </div>\n                    <div className=\"candidate-sub-container\">\n                        {(props.c.party === \"Republican\")?\n                            <img src=\"https://foralltn.org/wp-content/uploads/2020/12/rep-icon.png\" alt={props.c.party} className=\"candidate-party-image\" />\n                        :\n                            <img src=\"https://foralltn.org/wp-content/uploads/2020/12/dem-icon.png\" alt={props.c.party} className=\"candidate-party-image\" />\n                        }\n                    </div>\n                </div>\n\n\n                <div className=\"candidate-issue-container\">\n                    {props.c.issues.map((c,i) => {\n                        return (\n                            <CandidateIssue cId={props.c._id} key={i} issue={c} />\n                        );\n                    })}\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Candidate","/home/josiah-eakle/Dev/React-Apps/for-all-tn-admin/src/components/CandidateHub.js",["62","63","64","65","66","67"],"import Candidate from \"./Candidate.js\"\nimport {useState, useEffect} from \"react\"\nimport axios from \"axios\"\n\nrequire('dotenv').config();\n\nconst CandidateHub = (props) => {\n\n    const [ candidates, setCandidates ] = useState(undefined)\n\n    const [ senators, setSenators ] = useState(undefined)\n    const [ representatives, setRepresentatives ] = useState(undefined)\n\n    const [ senatorsImported, setSenatorsImported ] = useState(false)\n    const [ representativesImported, setRepresentativesImported ] = useState(false)\n\n    const [ imported, setImported ] = useState(false)\n\n    const importSenators = async () => {\n\n        const options = {\n            url: `http://localhost:4000/get/candidates/senators`,\n            method: \"GET\",\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios(options)\n        setSenators(res.data)\n        setSenatorsImported(true)\n\n    }\n\n    const importRepresentatives = async () => {\n\n        const options = {\n            url: `http://localhost:4000/get/candidates/representatives`,\n            method: \"GET\",\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios(options)\n        setRepresentatives(res.data)\n        setRepresentativesImported(true)\n\n    }\n\n    const importAllCandidates = async () => {\n\n        // const options = {\n        //     url: `http://localhost:4000/get/candidates/all`,\n        //     method: \"GET\",\n        //     mode: 'cors',\n        //     headers: {\n        //         'Content-Type': 'application/json'\n        //     }\n        // }\n\n        // const res = await axios(options)\n        // setCandidates(res.data)\n        // setImported(true)\n\n        await importSenators()\n        await importRepresentatives()\n\n    }\n\n    const requestUpdate = async () => {\n\n        const options = {\n            url: \"http://localhost:4000/update/all\",\n            method: 'GET'\n        }\n\n        const res = await axios(options)\n        console.log(`requesting candidates update, responce:`)\n        console.log(res)\n\n        setTimeout(() => {\n            importAllCandidates()\n        }, 200);\n\n    }\n\n    const toggleContainerOpen = (e) => {\n        \n        console.log(e.target)\n        if(e.target.textContent === 'Hide') e.target.textContent = 'Open' \n        else e.target.textContent = 'Hide'\n\n        switch(e.target.id) {\n\n\n            case('close-senators-button'):\n                let sContainer = document.getElementById('senators-container')\n                sContainer.classList.toggle('open')\n                sContainer.classList.toggle('close')\n                break;\n            case('close-representatives-button'):\n                let rContainer = document.getElementById('representatives-container')\n                rContainer.classList.toggle('open')\n                rContainer.classList.toggle('close')\n                break;\n        }\n\n    }\n\n    useEffect(() => {\n        importAllCandidates()\n    }, [])\n\n    return(\n        <div className='CandidateHub'>  \n            <button onClick={requestUpdate} id='update-candidates-button'>Update All Candidates</button>\n\n            <div className='candidate-header'>\n                Senators\n                <button onClick={toggleContainerOpen} id='close-senators-button' className='close-header-button'>\n                    Hide\n                </button>\n            </div>\n\n            <div id='senators-container' className='candidates-container open'>\n                {(senatorsImported) ? senators.map((c, i) => {\n                    return <Candidate c={c} key={i} />\n                }) : null}\n            </div>\n\n\n            <div className='candidate-header'>\n                Representatives\n                <button onClick={toggleContainerOpen} id='close-representatives-button' className='close-header-button'>\n                    Hide\n                </button>\n            </div>\n            <div id='representatives-container' className='candidates-container open'>\n\n                {(representativesImported) ? representatives.map((c, i) => {\n                    return <Candidate c={c} key={i} />\n                }) : null}\n\n            </div>\n\n\n        </div>\n    );\n}\n\nexport default CandidateHub","/home/josiah-eakle/Dev/React-Apps/for-all-tn-admin/src/components/Issue.js",[],"/home/josiah-eakle/Dev/React-Apps/for-all-tn-admin/src/components/CandidateIssue.js",["68"],"/home/josiah-eakle/Dev/React-Apps/for-all-tn-admin/src/components/LoginPage.js",["69"],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\n\nconst LoginPage = (props) => {\n\n    // props - \n    //      setUser(user)  || parent function, sets user\n\n    const [ newAccount, setNewAccount ] = useState(false)\n    const [ alertMessage, setAlertMessage ] = useState(undefined)\n    const [ email, setEmail ] = useState()\n    const [ password, setPassword ] = useState()\n    const [ firstName, setFirstName ] = useState()\n    const [ lastName, setLastName ] = useState()\n\n    const loginUser = async () => {\n\n        const options = {\n            url: 'http://localhost:4000/user/login',\n            method: \"POST\",\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Accept\": \"application/json\"\n            },\n            data: {\n                email: email,\n                password: password\n            }        \n        }\n\n        const res = await axios(options)\n        if(res.data.type === 'SUCCESS') {\n            props.setUser(res.data.user)\n        } else {\n            setAlertMessage(res.data)\n            setTimeout(() => {\n                setAlertMessage('')\n            }, 10000)\n        }\n        console.log(res)\n\n\n    }\n\n    const createNewUser = async () => {\n\n        const options = {\n            url: 'http://localhost:4000/user/new',\n            method: \"POST\",\n            mode: 'cors',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Accept\": \"application/json\"\n            },\n            data: {\n                email: email,\n                password: password,\n                firstName: firstName,\n                lastName: lastName\n            }\n        }\n\n        const res = await axios(options)\n        if(res.data.type === 'SUCCESS') {\n            props.setUser(res.data.user)\n        } else {\n            setAlertMessage(res.data)\n            setTimeout(() => {\n                setAlertMessage('')\n            }, 10000)\n        }\n        console.log(res)\n\n    }\n\n    const toggleForm = () => {\n        setNewAccount(!newAccount)\n    }\n\n    const editValue = (e) => {\n\n        const value = e.target.value\n        switch(e.target.id) {\n            case('email-input'):\n                setEmail(value)\n                break;\n            case('password-input'):\n                setPassword(value)\n                break;\n            case('first-name-input'):\n                setFirstName(value)\n                break;\n            case('last-name-input'):\n                setLastName(value)\n                break;\n        }\n    }\n\n    const togglePasswordVisibility = () => {\n        const passwordCheckbox = document.getElementById('show-password-button')\n        const passwordInput = document.getElementById('password-input')\n        if(passwordCheckbox.checked) {\n            passwordInput.type = 'text'\n        } else {\n            passwordInput.type = 'password'\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if(newAccount) {\n            createNewUser()\n        } else {\n            loginUser()\n        }\n    }\n\n    useEffect(() => {\n        console.log(`email: ${email}, \\npassword: ${password}, \\nfirstname: ${firstName}, \\nlastname: ${lastName}`)\n    }, [password, email, firstName, lastName])\n\n    return (\n        <div className='LoginPage'>\n\n            <div className='login-header'>\n                <h1> For All TN Admin </h1>\n            </div>\n\n            <div className='login-container'>\n\n                <h2>\n                    {(!newAccount)?`Login`:`Create Account`}\n                </h2>\n                {(alertMessage)?<span id='alert-message'>{`${alertMessage}`}</span>:null}\n                {/* {(newAccount===false)? */}\n                    <form onSubmit={handleSubmit} className='login-form'> \n                        <label htmlFor='email-input'>Email</label>\n                        <input type='email' id='email-input' onChange={editValue } required='true'></input>\n                        {(newAccount===true)?\n                            <div className='align-vertical'>\n                                <label htmlFor='first-name-input'>First Name</label>\n                                <input onChange={editValue} type='text' id='first-name-input' required='true'></input>\n                                <label htmlFor='last-name-input'>Last Name</label>\n                                <input onChange={editValue} type='text' id='last-name-input' required='true'></input>\n                            </div>\n                        : null}\n                        <label htmlFor='password-input'>Password\n                        \n                            (\n                            <input onChange={togglePasswordVisibility} type='checkbox' id='show-password-button'></input>\n                            <label htmlFor='show-password-button'>Show</label>\n                            )\n                        </label>\n                        <input onChange={editValue} type='password' id='password-input' required='true'></input>\n\n                        <button type='submit' >\n                            {(newAccount===true)?\n                                'Create Account'\n                            :\n                                'Login'\n                            }\n                        </button>\n\n                    </form>\n                {/* : */}\n                    {/* <form onSubmit={handleSubmit} className='new-account-form'> \n                        <label htmlFor='email-input'>Email</label>\n                        <input id='email-input' onChange={editValue}></input>\n\n\n                        <label htmlFor='password-input'>Password</label>\n                        <input type='password' id='password-input'></input>\n                        <button type='submit' >Create Account</button>\n                    </form> */}\n                {/* } */}\n                <button onClick={toggleForm}>\n                    {(!newAccount) ? `New Account` : `Use Existing Account`}\n                </button>\n\n\n            </div>\n        </div>\n    );\n}\n\nexport default LoginPage","/home/josiah-eakle/Dev/React-Apps/for-all-tn-admin/src/modules/UserHandler.js",[],"/home/josiah-eakle/Dev/React-Apps/for-all-tn-admin/src/components/OpinionOption.js",["70"],"import {useState, useEffect} from \"react\"\n\nconst OpinionOption = (props) => {\n\n    // props - \n    //      opinion (yes, leans-yes, neutral, leans-no, no)\n    //      cId (candidate id)\n    //      initSelected (true/ false) - set true if it is candidate opinion\n    //      issue\n    //      onUpdate(opinionStr)\n\n    const [ selectedStr, setSelectedStr ] = useState('') // Only 'selected' or ''\n    const [ opinionStr, setOpinionStr ] = useState('') // Yes, Leans Yes, Neutral, Leans No, No\n    const [ selected, setSelected ] = useState(false) // true or false\n\n    const updateView = (e) => {\n        setSelectedStr(e.target.checked)\n        props.updateView(opinionStr)\n    }\n\n    useEffect(() => {\n        let str = props.opinion.split('-')\n        if(str.length > 1) {\n            let first = str[0].charAt(0).toUpperCase() + str[0].slice(1)\n            let second = str[1].charAt(0).toUpperCase() + str[1].slice(1)\n            setOpinionStr(`${first} ${second}`)\n        } else {\n            let first = str[0].charAt(0).toUpperCase() + str[0].slice(1)\n            setOpinionStr(first)\n        }\n        // setSelected(props.initSelected)\n    }, [])\n\n    useEffect(() => {\n        setSelected(props.initSelected)\n    }, [props.initSelected])\n\n    useEffect(() => {\n        if(selected) {\n            setSelectedStr('selected')\n        } else {\n            setSelectedStr('')\n        }\n    }, [selected])\n\n    return (\n\n        <label className={`vertical-words opinion ${props.opinion} ${selectedStr}`} htmlFor={`${props.opinion}-${props.cId}-${props.issue.issue.title}`}>\n            {opinionStr}\n            <input onChange={updateView} type='radio' value={opinionStr} id={`${props.opinion}-${props.cId}-${props.issue.issue.title}`} name='Candidate Opinion' checked={selected} ></input>\n        </label>\n\n\n        // <label className={`vertical-words opinion ${props.opinion} `} id={`${props.opinion}-${props.cId}-${props.issue.issue.title}-label`} htmlFor={`${props.opinion}-${props.cId}-${props.issue.issue.title}`}>Yes\n        //     <input type='radio' value=\"Yes\" id={`${props.opinion}-${props.cId}-${props.issue.issue.title}`} name=\"candidate-opinion\"  ></input>\n        // </label>\n    );\n}\n\nexport default OpinionOption","/home/josiah-eakle/Dev/React-Apps/for-all-tn-admin/src/components/UserHub.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":70,"column":15,"nodeType":"77","messageId":"78","endLine":70,"endColumn":18},{"ruleId":"75","severity":1,"message":"76","line":121,"column":15,"nodeType":"77","messageId":"78","endLine":121,"endColumn":18},{"ruleId":"79","severity":1,"message":"80","line":128,"column":9,"nodeType":"81","messageId":"82","endLine":135,"endColumn":10},{"ruleId":"83","severity":1,"message":"84","line":142,"column":8,"nodeType":"85","endLine":142,"endColumn":17,"suggestions":"86"},{"ruleId":"75","severity":1,"message":"87","line":5,"column":19,"nodeType":"77","messageId":"78","endLine":5,"endColumn":28},{"ruleId":"75","severity":1,"message":"88","line":12,"column":13,"nodeType":"77","messageId":"78","endLine":12,"endColumn":20},{"ruleId":"75","severity":1,"message":"89","line":14,"column":11,"nodeType":"77","messageId":"78","endLine":14,"endColumn":24},{"ruleId":"90","severity":1,"message":"91","line":32,"column":25,"nodeType":"92","endLine":32,"endColumn":134},{"ruleId":"75","severity":1,"message":"93","line":9,"column":13,"nodeType":"77","messageId":"78","endLine":9,"endColumn":23},{"ruleId":"75","severity":1,"message":"94","line":9,"column":25,"nodeType":"77","messageId":"78","endLine":9,"endColumn":38},{"ruleId":"75","severity":1,"message":"95","line":17,"column":13,"nodeType":"77","messageId":"78","endLine":17,"endColumn":21},{"ruleId":"75","severity":1,"message":"96","line":17,"column":23,"nodeType":"77","messageId":"78","endLine":17,"endColumn":34},{"ruleId":"79","severity":1,"message":"80","line":96,"column":9,"nodeType":"81","messageId":"82","endLine":109,"endColumn":10},{"ruleId":"83","severity":1,"message":"97","line":115,"column":8,"nodeType":"85","endLine":115,"endColumn":10,"suggestions":"98"},{"ruleId":"83","severity":1,"message":"99","line":45,"column":8,"nodeType":"85","endLine":45,"endColumn":10,"suggestions":"100"},{"ruleId":"79","severity":1,"message":"80","line":85,"column":9,"nodeType":"81","messageId":"82","endLine":98,"endColumn":10},{"ruleId":"83","severity":1,"message":"101","line":32,"column":8,"nodeType":"85","endLine":32,"endColumn":10,"suggestions":"102"},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onEditing'. Either include it or remove the dependency array.","ArrayExpression",["105"],"'useEffect' is defined but never used.","'editing' is assigned a value but never used.","'editCandidate' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'candidates' is assigned a value but never used.","'setCandidates' is assigned a value but never used.","'imported' is assigned a value but never used.","'setImported' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'importAllCandidates'. Either include it or remove the dependency array.",["106"],"React Hook useEffect has a missing dependency: 'props.issue.view'. Either include it or remove the dependency array. If 'setCandView' needs the current value of 'props.issue.view', you can also switch to useReducer instead of useState and read 'props.issue.view' in the reducer.",["107"],"React Hook useEffect has a missing dependency: 'props.opinion'. Either include it or remove the dependency array.",["108"],"no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [editing, onEditing]",{"range":"117","text":"118"},"Update the dependencies array to be: [importAllCandidates]",{"range":"119","text":"120"},"Update the dependencies array to be: [props.issue.view]",{"range":"121","text":"122"},"Update the dependencies array to be: [props.opinion]",{"range":"123","text":"124"},[3284,3293],"[editing, onEditing]",[3093,3095],"[importAllCandidates]",[1155,1157],"[props.issue.view]",[1154,1156],"[props.opinion]"]